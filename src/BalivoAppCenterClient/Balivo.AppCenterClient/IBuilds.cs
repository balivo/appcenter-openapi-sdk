//// <auto-generated>
//// Code generated by Microsoft (R) AutoRest Code Generator.
//// Changes may cause incorrect behavior and will be lost if the code is
//// regenerated.
//// </auto-generated>

//namespace Balivo.AppCenterClient
//{
//    using Microsoft.Rest;
//    using Models;
//    using System.Collections;
//    using System.Collections.Generic;
//    using System.Threading;
//    using System.Threading.Tasks;

//    /// <summary>
//    /// Builds operations.
//    /// </summary>
//    public partial interface IBuilds
//    {
//        /// <summary>
//        /// Public webhook sink
//        /// </summary>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="ValidationErrorResponseException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        Task<HttpOperationResponse> WebhookWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Gets the Xcode versions available to this app
//        /// </summary>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="ValidationErrorResponseException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<IList<XcodeVersion>>> ListXcodeVersionsWithHttpMessagesAsync(string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Gets the Xamarin SDK bundles available to this app
//        /// </summary>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="ValidationErrorResponseException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<IList<XamarinSDKBundle>>> ListXamarinSDKBundlesWithHttpMessagesAsync(string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Gets the Mono versions available to this app
//        /// </summary>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="ValidationErrorResponseException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<IList<MonoVersion>>> ListMonoVersionsWithHttpMessagesAsync(string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Get the build log
//        /// </summary>
//        /// <param name='buildId'>
//        /// The build ID
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<BuildLog>> GetLogWithHttpMessagesAsync(int buildId, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Gets the download URI
//        /// </summary>
//        /// <param name='buildId'>
//        /// The build ID
//        /// </param>
//        /// <param name='downloadType'>
//        /// The download type. Possible values include: 'build', 'symbols',
//        /// 'logs'
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<DownloadContainer>> GetDownloadUriWithHttpMessagesAsync(int buildId, string downloadType, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Distribute a build
//        /// </summary>
//        /// <param name='buildId'>
//        /// The build ID
//        /// </param>
//        /// <param name='distributeInfo'>
//        /// The distribution details
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<DistributionResponse>> DistributeWithHttpMessagesAsync(int buildId, DistributionRequest distributeInfo, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Returns the build detail for the given build ID
//        /// </summary>
//        /// <param name='buildId'>
//        /// The build ID
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<Build>> GetWithHttpMessagesAsync(int buildId, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Cancels a build
//        /// </summary>
//        /// <param name='buildId'>
//        /// The build ID
//        /// </param>
//        /// <param name='properties'>
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<Build>> UpdateWithHttpMessagesAsync(int buildId, BuildPatch properties, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Application specific build service status
//        /// </summary>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<BuildServiceStatus>> GetStatusByAppIdWithHttpMessagesAsync(string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Returns the projects in the repository for the branch, for all
//        /// toolsets
//        /// </summary>
//        /// <param name='branch'>
//        /// The branch name
//        /// </param>
//        /// <param name='os'>
//        /// The desired OS for the project scan; normally the same as the app
//        /// OS. Possible values include: 'iOS', 'Android', 'Windows', 'macOS'
//        /// </param>
//        /// <param name='platform'>
//        /// The desired platform for the project scan. Possible values include:
//        /// 'Objective-C-Swift', 'React-Native', 'Xamarin', 'Java', 'UWP'
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<ToolsetProjects>> ListToolsetProjectsWithHttpMessagesAsync(string branch, string os, string platform, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Returns the list of builds for the branch
//        /// </summary>
//        /// <param name='branch'>
//        /// The branch name
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<IList<Build>>> ListByBranchWithHttpMessagesAsync(string branch, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Create a build
//        /// </summary>
//        /// <param name='branch'>
//        /// The branch name
//        /// </param>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='paramsParameter'>
//        /// Parameters of the build
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="Microsoft.Rest.HttpOperationException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<Build>> CreateWithHttpMessagesAsync(string branch, string ownerName, string appName, BuildParams paramsParameter = default(BuildParams), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//        /// <summary>
//        /// Returns the list of Git branches for this application
//        /// </summary>
//        /// <param name='ownerName'>
//        /// The name of the owner
//        /// </param>
//        /// <param name='appName'>
//        /// The name of the application
//        /// </param>
//        /// <param name='customHeaders'>
//        /// The headers that will be added to request.
//        /// </param>
//        /// <param name='cancellationToken'>
//        /// The cancellation token.
//        /// </param>
//        /// <exception cref="ValidationErrorResponseException">
//        /// Thrown when the operation returned an invalid status code
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.SerializationException">
//        /// Thrown when unable to deserialize the response
//        /// </exception>
//        /// <exception cref="Microsoft.Rest.ValidationException">
//        /// Thrown when a required parameter is null
//        /// </exception>
//        Task<HttpOperationResponse<IList<BranchStatus>>> ListBranchesWithHttpMessagesAsync(string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
//    }
//}
