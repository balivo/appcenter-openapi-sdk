// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UploadedSymbolInfo
    {
        /// <summary>
        /// Initializes a new instance of the UploadedSymbolInfo class.
        /// </summary>
        public UploadedSymbolInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UploadedSymbolInfo class.
        /// </summary>
        /// <param name="symbolId">The symbol id of the symbol binary</param>
        /// <param name="platform">The platform the symbol is associated
        /// with</param>
        public UploadedSymbolInfo(string symbolId, string platform)
        {
            SymbolId = symbolId;
            Platform = platform;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the symbol id of the symbol binary
        /// </summary>
        [JsonProperty(PropertyName = "symbol_id")]
        public string SymbolId { get; set; }

        /// <summary>
        /// Gets or sets the platform the symbol is associated with
        /// </summary>
        [JsonProperty(PropertyName = "platform")]
        public string Platform { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SymbolId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SymbolId");
            }
            if (Platform == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Platform");
            }
        }
    }
}
