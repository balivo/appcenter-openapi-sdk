// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Information required to publish devices to the Apple Developer account
    /// and resign the application.
    /// </summary>
    public partial class UpdateDevicesRequest
    {
        /// <summary>
        /// Initializes a new instance of the UpdateDevicesRequest class.
        /// </summary>
        public UpdateDevicesRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateDevicesRequest class.
        /// </summary>
        /// <param name="releaseId">When provided, will update the provided
        /// release with the new set of devices. By default the latest release
        /// of the distribution group is used when this property is omitted. If
        /// `release_id` is passed in the path, there is no need to pass in the
        /// body as well.</param>
        /// <param name="username">The username for the Apple Developer account
        /// to publish the devices to.</param>
        /// <param name="password">The password for the Apple Developer account
        /// to publish the devices to.</param>
        /// <param name="accountServiceConnectionId">The service_connection_id
        /// of the stored Apple credentials instead of username,
        /// password.</param>
        /// <param name="p12Base64">The certificate to use for resigning the
        /// application with the updated provisioning profiles.</param>
        /// <param name="p12ServiceConnectionId">The service_connection_id of
        /// the stored Apple certificate instead of p12_base64 value.</param>
        /// <param name="p12Password">The password certificate if one is
        /// needed.</param>
        /// <param name="publishAllDevices">When set to true, all unprovisioned
        /// devices will be published to the Apple Developer account.  When
        /// false, only the provided devices will be published to the Apple
        /// Developer account.</param>
        /// <param name="devices">Array of device UDID's to be published to the
        /// Apple Developer account.</param>
        /// <param name="destinations">Array of distribution groups that the
        /// devices should be provisioned from.</param>
        public UpdateDevicesRequest(double? releaseId = default(double?), string username = default(string), string password = default(string), string accountServiceConnectionId = default(string), string p12Base64 = default(string), string p12ServiceConnectionId = default(string), string p12Password = default(string), bool? publishAllDevices = default(bool?), IList<string> devices = default(IList<string>), IList<UpdateDevicesRequestDestinationsItem> destinations = default(IList<UpdateDevicesRequestDestinationsItem>))
        {
            ReleaseId = releaseId;
            Username = username;
            Password = password;
            AccountServiceConnectionId = accountServiceConnectionId;
            P12Base64 = p12Base64;
            P12ServiceConnectionId = p12ServiceConnectionId;
            P12Password = p12Password;
            PublishAllDevices = publishAllDevices;
            Devices = devices;
            Destinations = destinations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets when provided, will update the provided release with
        /// the new set of devices. By default the latest release of the
        /// distribution group is used when this property is omitted. If
        /// `release_id` is passed in the path, there is no need to pass in the
        /// body as well.
        /// </summary>
        [JsonProperty(PropertyName = "release_id")]
        public double? ReleaseId { get; set; }

        /// <summary>
        /// Gets or sets the username for the Apple Developer account to
        /// publish the devices to.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets the password for the Apple Developer account to
        /// publish the devices to.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the service_connection_id of the stored Apple
        /// credentials instead of username, password.
        /// </summary>
        [JsonProperty(PropertyName = "account_service_connection_id")]
        public string AccountServiceConnectionId { get; set; }

        /// <summary>
        /// Gets or sets the certificate to use for resigning the application
        /// with the updated provisioning profiles.
        /// </summary>
        [JsonProperty(PropertyName = "p12_base64")]
        public string P12Base64 { get; set; }

        /// <summary>
        /// Gets or sets the service_connection_id of the stored Apple
        /// certificate instead of p12_base64 value.
        /// </summary>
        [JsonProperty(PropertyName = "p12_service_connection_id")]
        public string P12ServiceConnectionId { get; set; }

        /// <summary>
        /// Gets or sets the password certificate if one is needed.
        /// </summary>
        [JsonProperty(PropertyName = "p12_password")]
        public string P12Password { get; set; }

        /// <summary>
        /// Gets or sets when set to true, all unprovisioned devices will be
        /// published to the Apple Developer account.  When false, only the
        /// provided devices will be published to the Apple Developer account.
        /// </summary>
        [JsonProperty(PropertyName = "publish_all_devices")]
        public bool? PublishAllDevices { get; set; }

        /// <summary>
        /// Gets or sets array of device UDID's to be published to the Apple
        /// Developer account.
        /// </summary>
        [JsonProperty(PropertyName = "devices")]
        public IList<string> Devices { get; set; }

        /// <summary>
        /// Gets or sets array of distribution groups that the devices should
        /// be provisioned from.
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        public IList<UpdateDevicesRequestDestinationsItem> Destinations { get; set; }

    }
}
