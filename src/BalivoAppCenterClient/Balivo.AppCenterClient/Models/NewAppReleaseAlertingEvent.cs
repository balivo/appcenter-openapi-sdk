// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// New app release alerting event
    /// </summary>
    public partial class NewAppReleaseAlertingEvent : AlertingEvent
    {
        /// <summary>
        /// Initializes a new instance of the NewAppReleaseAlertingEvent class.
        /// </summary>
        public NewAppReleaseAlertingEvent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NewAppReleaseAlertingEvent class.
        /// </summary>
        /// <param name="eventTimestamp">ISO 8601 date time when event was
        /// generated</param>
        /// <param name="eventId">A unique identifier for this event instance.
        /// Useful for deduplication</param>
        /// <param name="properties">Obsolete. Use emailProperties.</param>
        /// <param name="userIds">List of users who need to receive an email
        /// notification. If this is not null, then only sending emails will be
        /// triggered even if the event requires calling webhooks or doing
        /// other actions.</param>
        /// <param name="disableWebhook">indicate whether notify via webhook or
        /// not</param>
        /// <param name="appReleaseProperties">Properties of new application
        /// release</param>
        public NewAppReleaseAlertingEvent(string eventTimestamp, string eventId, object properties = default(object), IList<string> userIds = default(IList<string>), bool? disableWebhook = default(bool?), NewAppReleaseAlertingEventAppReleaseProperties appReleaseProperties = default(NewAppReleaseAlertingEventAppReleaseProperties))
            : base(eventTimestamp, eventId, properties)
        {
            UserIds = userIds;
            DisableWebhook = disableWebhook;
            AppReleaseProperties = appReleaseProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of users who need to receive an email
        /// notification. If this is not null, then only sending emails will be
        /// triggered even if the event requires calling webhooks or doing
        /// other actions.
        /// </summary>
        [JsonProperty(PropertyName = "user_ids")]
        public IList<string> UserIds { get; set; }

        /// <summary>
        /// Gets or sets indicate whether notify via webhook or not
        /// </summary>
        [JsonProperty(PropertyName = "disable_webhook")]
        public bool? DisableWebhook { get; set; }

        /// <summary>
        /// Gets or sets properties of new application release
        /// </summary>
        [JsonProperty(PropertyName = "app_release_properties")]
        public NewAppReleaseAlertingEventAppReleaseProperties AppReleaseProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (AppReleaseProperties != null)
            {
                AppReleaseProperties.Validate();
            }
        }
    }
}
