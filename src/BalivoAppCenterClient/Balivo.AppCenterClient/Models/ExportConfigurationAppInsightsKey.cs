// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Configuration for export to Application Insights resource with customer
    /// provided intrumentation key
    /// </summary>
    [Newtonsoft.Json.JsonObject("application_insights_instrumentation_key")]
    public partial class ExportConfigurationAppInsightsKey : ExportConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the ExportConfigurationAppInsightsKey
        /// class.
        /// </summary>
        public ExportConfigurationAppInsightsKey()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportConfigurationAppInsightsKey
        /// class.
        /// </summary>
        /// <param name="instrumentationKey">Instrumentation key for
        /// Application Insights resource</param>
        /// <param name="resourceName">The resource name on azure</param>
        /// <param name="resourceGroup">The resource group name on
        /// azure</param>
        public ExportConfigurationAppInsightsKey(string instrumentationKey, IList<ExportEntity?> exportEntities = default(IList<ExportEntity?>), string resourceName = default(string), string resourceGroup = default(string))
            : base(exportEntities, resourceName, resourceGroup)
        {
            InstrumentationKey = instrumentationKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets instrumentation key for Application Insights resource
        /// </summary>
        [JsonProperty(PropertyName = "instrumentation_key")]
        public string InstrumentationKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InstrumentationKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InstrumentationKey");
            }
        }
    }
}
