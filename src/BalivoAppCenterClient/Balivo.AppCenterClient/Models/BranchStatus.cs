// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The branch build status
    /// </summary>
    public partial class BranchStatus
    {
        /// <summary>
        /// Initializes a new instance of the BranchStatus class.
        /// </summary>
        public BranchStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BranchStatus class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        public BranchStatus(bool configured, IDictionary<string, BranchProperties> additionalProperties = default(IDictionary<string, BranchProperties>), Build lastBuild = default(Build))
        {
            AdditionalProperties = additionalProperties;
            Configured = configured;
            LastBuild = lastBuild;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, BranchProperties> AdditionalProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configured")]
        public bool Configured { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastBuild")]
        public Build LastBuild { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AdditionalProperties != null)
            {
                foreach (var valueElement in AdditionalProperties.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
            if (LastBuild != null)
            {
                LastBuild.Validate();
            }
        }
    }
}
