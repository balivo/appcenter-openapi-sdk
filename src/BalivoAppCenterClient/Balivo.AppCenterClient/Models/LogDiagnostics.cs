// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("Log_Diagnostics")]
    public partial class LogDiagnostics
    {
        /// <summary>
        /// Initializes a new instance of the LogDiagnostics class.
        /// </summary>
        public LogDiagnostics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogDiagnostics class.
        /// </summary>
        /// <param name="timestamp">Log creation timestamp.
        /// </param>
        /// <param name="installId">Install ID.
        /// </param>
        public LogDiagnostics(System.DateTime timestamp, System.Guid installId, DeviceDiagnostics device)
        {
            Timestamp = timestamp;
            InstallId = installId;
            Device = device;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets log creation timestamp.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// Gets or sets install ID.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "install_id")]
        public System.Guid InstallId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "device")]
        public DeviceDiagnostics Device { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Device == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Device");
            }
            if (Device != null)
            {
                Device.Validate();
            }
        }
    }
}
