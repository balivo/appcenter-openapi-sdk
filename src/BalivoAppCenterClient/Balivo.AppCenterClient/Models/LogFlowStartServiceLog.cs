// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describe a AppCenter.Start API call from the SDK.
    /// </summary>
    [Newtonsoft.Json.JsonObject("start_service")]
    public partial class LogFlowStartServiceLog : LogFlowLog
    {
        /// <summary>
        /// Initializes a new instance of the LogFlowStartServiceLog class.
        /// </summary>
        public LogFlowStartServiceLog()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogFlowStartServiceLog class.
        /// </summary>
        /// <param name="timestamp">Log creation timestamp.
        /// </param>
        /// <param name="installId">Install ID.
        /// </param>
        /// <param name="services">The list of services of the AppCenter Start
        /// API call.</param>
        public LogFlowStartServiceLog(System.DateTime timestamp, System.Guid installId, LogFlowDevice device, IList<string> services = default(IList<string>))
            : base(timestamp, installId, device)
        {
            Services = services;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of services of the AppCenter Start API call.
        /// </summary>
        [JsonProperty(PropertyName = "services")]
        public IList<string> Services { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Services != null)
            {
                if (Services.Count < 1)
                {
                    throw new ValidationException(ValidationRules.MinItems, "Services", 1);
                }
            }
        }
    }
}
