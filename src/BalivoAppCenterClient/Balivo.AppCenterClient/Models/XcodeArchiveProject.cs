// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class XcodeArchiveProject
    {
        /// <summary>
        /// Initializes a new instance of the XcodeArchiveProject class.
        /// </summary>
        public XcodeArchiveProject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the XcodeArchiveProject class.
        /// </summary>
        /// <param name="archiveTargetId">The Id of the target to
        /// archive</param>
        /// <param name="projectName">The project to archive container
        /// name</param>
        /// <param name="projectPath">Full path of the target project</param>
        public XcodeArchiveProject(string archiveTargetId, string projectName, string projectPath = default(string))
        {
            ArchiveTargetId = archiveTargetId;
            ProjectName = projectName;
            ProjectPath = projectPath;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Id of the target to archive
        /// </summary>
        [JsonProperty(PropertyName = "archiveTargetId")]
        public string ArchiveTargetId { get; set; }

        /// <summary>
        /// Gets or sets the project to archive container name
        /// </summary>
        [JsonProperty(PropertyName = "projectName")]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or sets full path of the target project
        /// </summary>
        [JsonProperty(PropertyName = "projectPath")]
        public string ProjectPath { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ArchiveTargetId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ArchiveTargetId");
            }
            if (ProjectName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ProjectName");
            }
        }
    }
}
