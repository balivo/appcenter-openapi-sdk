// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Export configuration result
    /// </summary>
    public partial class ExportConfigurationResult
    {
        /// <summary>
        /// Initializes a new instance of the ExportConfigurationResult class.
        /// </summary>
        public ExportConfigurationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExportConfigurationResult class.
        /// </summary>
        /// <param name="id">Export configuration id</param>
        /// <param name="exportType">Target resource type of export
        /// configuration. Possible values include: 'BlobStorage',
        /// 'AppInsights'</param>
        /// <param name="creationTime">Creation time in ISO 8601 format</param>
        /// <param name="state">State of the export job. Possible values
        /// include: 'Enabled', 'Disabled', 'Pending', 'Deleted',
        /// 'Invalid'</param>
        /// <param name="lastRunTime">Latest time in ISO 8601 format when
        /// export completed successfully</param>
        /// <param name="stateInfo">Additional information about export
        /// configuration state</param>
        /// <param name="resourceGroup">resource group for the storage
        /// account/App Insights resource</param>
        /// <param name="resourceName">Storage accout or Appinsights resource
        /// name</param>
        public ExportConfigurationResult(string id, ExportType exportType, string creationTime, ExportState state, string lastRunTime = default(string), IList<ExportEntity?> exportEntities = default(IList<ExportEntity?>), string stateInfo = default(string), string resourceGroup = default(string), string resourceName = default(string), ExportConfiguration exportConfiguration = default(ExportConfiguration))
        {
            Id = id;
            ExportType = exportType;
            CreationTime = creationTime;
            LastRunTime = lastRunTime;
            ExportEntities = exportEntities;
            State = state;
            StateInfo = stateInfo;
            ResourceGroup = resourceGroup;
            ResourceName = resourceName;
            ExportConfiguration = exportConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets export configuration id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets target resource type of export configuration. Possible
        /// values include: 'BlobStorage', 'AppInsights'
        /// </summary>
        [JsonProperty(PropertyName = "export_type")]
        public ExportType ExportType { get; set; }

        /// <summary>
        /// Gets or sets creation time in ISO 8601 format
        /// </summary>
        [JsonProperty(PropertyName = "creation_time")]
        public string CreationTime { get; set; }

        /// <summary>
        /// Gets or sets latest time in ISO 8601 format when export completed
        /// successfully
        /// </summary>
        [JsonProperty(PropertyName = "last_run_time")]
        public string LastRunTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "export_entities")]
        public IList<ExportEntity?> ExportEntities { get; set; }

        /// <summary>
        /// Gets or sets state of the export job. Possible values include:
        /// 'Enabled', 'Disabled', 'Pending', 'Deleted', 'Invalid'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public ExportState State { get; set; }

        /// <summary>
        /// Gets or sets additional information about export configuration
        /// state
        /// </summary>
        [JsonProperty(PropertyName = "state_info")]
        public string StateInfo { get; set; }

        /// <summary>
        /// Gets or sets resource group for the storage account/App Insights
        /// resource
        /// </summary>
        [JsonProperty(PropertyName = "resource_group")]
        public string ResourceGroup { get; set; }

        /// <summary>
        /// Gets or sets storage accout or Appinsights resource name
        /// </summary>
        [JsonProperty(PropertyName = "resource_name")]
        public string ResourceName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "export_configuration")]
        public ExportConfiguration ExportConfiguration { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (CreationTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreationTime");
            }
        }
    }
}
