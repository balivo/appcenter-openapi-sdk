// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// missing symbol
    /// </summary>
    public partial class MissingSymbol
    {
        /// <summary>
        /// Initializes a new instance of the MissingSymbol class.
        /// </summary>
        public MissingSymbol()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MissingSymbol class.
        /// </summary>
        /// <param name="symbolId">symbol id</param>
        /// <param name="name">symbol name</param>
        /// <param name="status">symbol status. Possible values include:
        /// 'missing', 'ignored', 'available'</param>
        /// <param name="platform">symbol plarform</param>
        public MissingSymbol(string symbolId, string name, string status, string platform = default(string))
        {
            SymbolId = symbolId;
            Name = name;
            Platform = platform;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets symbol id
        /// </summary>
        [JsonProperty(PropertyName = "symbol_id")]
        public string SymbolId { get; set; }

        /// <summary>
        /// Gets or sets symbol name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets symbol plarform
        /// </summary>
        [JsonProperty(PropertyName = "platform")]
        public string Platform { get; set; }

        /// <summary>
        /// Gets or sets symbol status. Possible values include: 'missing',
        /// 'ignored', 'available'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SymbolId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SymbolId");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
