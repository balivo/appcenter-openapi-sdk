// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Notification statistics
    /// </summary>
    public partial class NotificationDetailsResult : NotificationOverviewResult
    {
        /// <summary>
        /// Initializes a new instance of the NotificationDetailsResult class.
        /// </summary>
        public NotificationDetailsResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationDetailsResult class.
        /// </summary>
        /// <param name="notificationId">Notification id.</param>
        /// <param name="state">State of the notification. Possible values
        /// include: 'Cancelled', 'Completed', 'Enqueued', 'Processing',
        /// 'Unknown'</param>
        /// <param name="name">Notification name</param>
        /// <param name="sendTime">Notification send time</param>
        /// <param name="pnsSendFailure">Number of the notifications failed to
        /// send to the push provider.</param>
        /// <param name="pnsSendSuccess">Number of the notifications
        /// successfully sent to push the provider.</param>
        /// <param name="failureOutcomes">Failture outcome counts</param>
        public NotificationDetailsResult(string notificationId, string state, NotificationContent notificationContent, string name = default(string), NotificationTarget notificationTarget = default(NotificationTarget), System.DateTime? sendTime = default(System.DateTime?), int? pnsSendFailure = default(int?), int? pnsSendSuccess = default(int?), IList<NotificationFailureOutcomeCount> failureOutcomes = default(IList<NotificationFailureOutcomeCount>))
            : base(notificationId, state, name, notificationTarget, sendTime, pnsSendFailure, pnsSendSuccess)
        {
            NotificationContent = notificationContent;
            FailureOutcomes = failureOutcomes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notification_content")]
        public NotificationContent NotificationContent { get; set; }

        /// <summary>
        /// Gets or sets failture outcome counts
        /// </summary>
        [JsonProperty(PropertyName = "failure_outcomes")]
        public IList<NotificationFailureOutcomeCount> FailureOutcomes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (NotificationContent == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NotificationContent");
            }
            if (NotificationContent != null)
            {
                NotificationContent.Validate();
            }
        }
    }
}
