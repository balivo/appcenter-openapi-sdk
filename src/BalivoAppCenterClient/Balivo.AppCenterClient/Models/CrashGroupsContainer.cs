// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CrashGroupsContainer
    {
        /// <summary>
        /// Initializes a new instance of the CrashGroupsContainer class.
        /// </summary>
        public CrashGroupsContainer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CrashGroupsContainer class.
        /// </summary>
        /// <param name="continuationToken">Cassandra request continuation
        /// token. The token is used for pagination.</param>
        public CrashGroupsContainer(bool limitedResultSet, IList<CrashGroup> crashGroups, string continuationToken = default(string))
        {
            LimitedResultSet = limitedResultSet;
            ContinuationToken = continuationToken;
            CrashGroups = crashGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "limited_result_set")]
        public bool LimitedResultSet { get; set; }

        /// <summary>
        /// Gets or sets cassandra request continuation token. The token is
        /// used for pagination.
        /// </summary>
        [JsonProperty(PropertyName = "continuation_token")]
        public string ContinuationToken { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crash_groups")]
        public IList<CrashGroup> CrashGroups { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CrashGroups == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CrashGroups");
            }
            if (CrashGroups != null)
            {
                foreach (var element in CrashGroups)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
