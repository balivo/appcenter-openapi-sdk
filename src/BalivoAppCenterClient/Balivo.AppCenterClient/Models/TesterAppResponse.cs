// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TesterAppResponse : BasicAppResponse
    {
        /// <summary>
        /// Initializes a new instance of the TesterAppResponse class.
        /// </summary>
        public TesterAppResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TesterAppResponse class.
        /// </summary>
        /// <param name="id">The unique ID (UUID) of the app</param>
        /// <param name="displayName">The display name of the app</param>
        /// <param name="name">The name of the app used in URLs</param>
        /// <param name="os">The OS the app will be running on. Possible values
        /// include: 'Android', 'iOS', 'macOS', 'Tizen', 'tvOS', 'Windows',
        /// 'Custom'</param>
        /// <param name="description">The description of the app</param>
        /// <param name="iconUrl">The string representation of the URL pointing
        /// to the app's icon</param>
        /// <param name="iconSource">The string representation of the source of
        /// the app's icon</param>
        /// <param name="microsoftInternal">it indicates if the app is
        /// microsoft internal</param>
        /// <param name="permissions">The permissions associated with the
        /// app</param>
        public TesterAppResponse(System.Guid id, string displayName, string name, string os, Owner owner, string description = default(string), string iconUrl = default(string), string iconSource = default(string), bool? microsoftInternal = default(bool?), IList<string> permissions = default(IList<string>))
            : base(id, displayName, name, os, owner, description, iconUrl, iconSource)
        {
            MicrosoftInternal = microsoftInternal;
            Permissions = permissions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets it indicates if the app is microsoft internal
        /// </summary>
        [JsonProperty(PropertyName = "microsoft_internal")]
        public bool? MicrosoftInternal { get; set; }

        /// <summary>
        /// Gets or sets the permissions associated with the app
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<string> Permissions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
