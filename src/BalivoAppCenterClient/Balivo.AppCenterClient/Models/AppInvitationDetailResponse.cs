// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AppInvitationDetailResponse
    {
        /// <summary>
        /// Initializes a new instance of the AppInvitationDetailResponse
        /// class.
        /// </summary>
        public AppInvitationDetailResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppInvitationDetailResponse
        /// class.
        /// </summary>
        /// <param name="id">The unique ID (UUID) of the invitation</param>
        /// <param name="email">The email address of the invited user</param>
        /// <param name="inviteType">The invitation type. Possible values
        /// include: 'developer', 'tester'</param>
        /// <param name="isExistingUser">Indicates whether the invited user
        /// already exists</param>
        /// <param name="permissions">The permissions the user has for the
        /// app</param>
        /// <param name="appCount">The number of apps in the group</param>
        /// <param name="distributionGroup">The organization that owns the
        /// distribution group, if it exists</param>
        public AppInvitationDetailResponse(System.Guid id, AppResponse app, string email, string inviteType, UserProfileResponse invitedBy, bool isExistingUser, IList<string> permissions = default(IList<string>), double? appCount = default(double?), AppInvitationDetailResponseDistributionGroup distributionGroup = default(AppInvitationDetailResponseDistributionGroup))
        {
            Id = id;
            App = app;
            Email = email;
            InviteType = inviteType;
            InvitedBy = invitedBy;
            IsExistingUser = isExistingUser;
            Permissions = permissions;
            AppCount = appCount;
            DistributionGroup = distributionGroup;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique ID (UUID) of the invitation
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app")]
        public AppResponse App { get; set; }

        /// <summary>
        /// Gets or sets the email address of the invited user
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the invitation type. Possible values include:
        /// 'developer', 'tester'
        /// </summary>
        [JsonProperty(PropertyName = "invite_type")]
        public string InviteType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invited_by")]
        public UserProfileResponse InvitedBy { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the invited user already exists
        /// </summary>
        [JsonProperty(PropertyName = "is_existing_user")]
        public bool IsExistingUser { get; set; }

        /// <summary>
        /// Gets or sets the permissions the user has for the app
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<string> Permissions { get; set; }

        /// <summary>
        /// Gets or sets the number of apps in the group
        /// </summary>
        [JsonProperty(PropertyName = "app_count")]
        public double? AppCount { get; set; }

        /// <summary>
        /// Gets or sets the organization that owns the distribution group, if
        /// it exists
        /// </summary>
        [JsonProperty(PropertyName = "distribution_group")]
        public AppInvitationDetailResponseDistributionGroup DistributionGroup { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (App == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "App");
            }
            if (Email == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Email");
            }
            if (InviteType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InviteType");
            }
            if (InvitedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InvitedBy");
            }
            if (App != null)
            {
                App.Validate();
            }
            if (InvitedBy != null)
            {
                InvitedBy.Validate();
            }
            if (DistributionGroup != null)
            {
                DistributionGroup.Validate();
            }
        }
    }
}
