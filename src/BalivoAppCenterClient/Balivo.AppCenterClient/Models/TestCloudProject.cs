// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TestCloudProject
    {
        /// <summary>
        /// Initializes a new instance of the TestCloudProject class.
        /// </summary>
        public TestCloudProject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestCloudProject class.
        /// </summary>
        /// <param name="path">The path to the TestCloud project</param>
        /// <param name="frameworkType">Possible values include: 'Appium',
        /// 'Calabash', 'Espresso', 'UITest', 'Generated'</param>
        public TestCloudProject(string path, string frameworkType, TestCloudProjectFrameworkProperties frameworkProperties = default(TestCloudProjectFrameworkProperties))
        {
            Path = path;
            FrameworkType = frameworkType;
            FrameworkProperties = frameworkProperties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the path to the TestCloud project
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Appium', 'Calabash',
        /// 'Espresso', 'UITest', 'Generated'
        /// </summary>
        [JsonProperty(PropertyName = "frameworkType")]
        public string FrameworkType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "frameworkProperties")]
        public TestCloudProjectFrameworkProperties FrameworkProperties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
            if (FrameworkType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FrameworkType");
            }
        }
    }
}
