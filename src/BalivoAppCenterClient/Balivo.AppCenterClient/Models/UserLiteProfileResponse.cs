// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UserLiteProfileResponse
    {
        /// <summary>
        /// Initializes a new instance of the UserLiteProfileResponse class.
        /// </summary>
        public UserLiteProfileResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UserLiteProfileResponse class.
        /// </summary>
        /// <param name="id">The unique id (UUID) of the user</param>
        /// <param name="displayName">The full name of the user. Might for
        /// example be first and last name</param>
        /// <param name="email">The email address of the user</param>
        public UserLiteProfileResponse(System.Guid id, string displayName, string email)
        {
            Id = id;
            DisplayName = displayName;
            Email = email;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique id (UUID) of the user
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the full name of the user. Might for example be first
        /// and last name
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the email address of the user
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Email == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Email");
            }
        }
    }
}
