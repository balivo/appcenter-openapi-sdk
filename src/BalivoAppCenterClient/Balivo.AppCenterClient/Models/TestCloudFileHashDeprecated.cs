// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Test Cloud File Hash
    /// </summary>
    /// <remarks>
    /// Hash, type, path and byte range of a file that is required in test run
    /// </remarks>
    public partial class TestCloudFileHashDeprecated
    {
        /// <summary>
        /// Initializes a new instance of the TestCloudFileHashDeprecated
        /// class.
        /// </summary>
        public TestCloudFileHashDeprecated()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestCloudFileHashDeprecated
        /// class.
        /// </summary>
        /// <param name="fileType">Type of the file. Possible values include:
        /// 'dsym-file', 'app-file', 'test-file'</param>
        /// <param name="checksum">SHA256 hash of the file</param>
        /// <param name="relativePath">Relative path of the file</param>
        /// <param name="byteRange">Range of bytes required to verify ownership
        /// of the file</param>
        public TestCloudFileHashDeprecated(string fileType, string checksum, string relativePath, string byteRange = default(string))
        {
            FileType = fileType;
            Checksum = checksum;
            RelativePath = relativePath;
            ByteRange = byteRange;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of the file. Possible values include:
        /// 'dsym-file', 'app-file', 'test-file'
        /// </summary>
        [JsonProperty(PropertyName = "file_type")]
        public string FileType { get; set; }

        /// <summary>
        /// Gets or sets SHA256 hash of the file
        /// </summary>
        [JsonProperty(PropertyName = "checksum")]
        public string Checksum { get; set; }

        /// <summary>
        /// Gets or sets relative path of the file
        /// </summary>
        [JsonProperty(PropertyName = "relative_path")]
        public string RelativePath { get; set; }

        /// <summary>
        /// Gets or sets range of bytes required to verify ownership of the
        /// file
        /// </summary>
        [JsonProperty(PropertyName = "byte_range")]
        public string ByteRange { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FileType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FileType");
            }
            if (Checksum == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Checksum");
            }
            if (RelativePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RelativePath");
            }
        }
    }
}
