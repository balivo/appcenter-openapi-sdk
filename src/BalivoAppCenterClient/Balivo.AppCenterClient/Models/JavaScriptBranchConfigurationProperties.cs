// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Build configuration when React Native, or other JavaScript tech, is
    /// part of the build steps
    /// </summary>
    public partial class JavaScriptBranchConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// JavaScriptBranchConfigurationProperties class.
        /// </summary>
        public JavaScriptBranchConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// JavaScriptBranchConfigurationProperties class.
        /// </summary>
        /// <param name="packageJsonPath">Path to package.json file for the
        /// main project, e.g. "package.json" or "myapp/package.json"</param>
        /// <param name="runTests">Whether to run Jest unit tests, via npm
        /// test, during the build</param>
        /// <param name="reactNativeVersion">Version of React Native from
        /// package.json files</param>
        public JavaScriptBranchConfigurationProperties(string packageJsonPath, bool? runTests = default(bool?), string reactNativeVersion = default(string))
        {
            PackageJsonPath = packageJsonPath;
            RunTests = runTests;
            ReactNativeVersion = reactNativeVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets path to package.json file for the main project, e.g.
        /// "package.json" or "myapp/package.json"
        /// </summary>
        [JsonProperty(PropertyName = "packageJsonPath")]
        public string PackageJsonPath { get; set; }

        /// <summary>
        /// Gets or sets whether to run Jest unit tests, via npm test, during
        /// the build
        /// </summary>
        [JsonProperty(PropertyName = "runTests")]
        public bool? RunTests { get; set; }

        /// <summary>
        /// Gets or sets version of React Native from package.json files
        /// </summary>
        [JsonProperty(PropertyName = "reactNativeVersion")]
        public string ReactNativeVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PackageJsonPath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PackageJsonPath");
            }
        }
    }
}
