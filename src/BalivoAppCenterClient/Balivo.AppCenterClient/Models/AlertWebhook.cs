// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Alerting webhook
    /// </summary>
    public partial class AlertWebhook
    {
        /// <summary>
        /// Initializes a new instance of the AlertWebhook class.
        /// </summary>
        public AlertWebhook()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AlertWebhook class.
        /// </summary>
        /// <param name="name">display name of the webhook</param>
        /// <param name="url">target url of the webhook</param>
        /// <param name="eventTypes">Event types enabled for webhook</param>
        /// <param name="id">The unique id (UUID) of the webhook</param>
        /// <param name="enabled">Allows eanble/disable webhook</param>
        public AlertWebhook(string name, string url, IList<string> eventTypes, string id = default(string), bool? enabled = default(bool?))
        {
            Id = id;
            Name = name;
            Url = url;
            Enabled = enabled;
            EventTypes = eventTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique id (UUID) of the webhook
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets display name of the webhook
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets target url of the webhook
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets allows eanble/disable webhook
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets event types enabled for webhook
        /// </summary>
        [JsonProperty(PropertyName = "event_types")]
        public IList<string> EventTypes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
            if (EventTypes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EventTypes");
            }
            if (Name != null)
            {
                if (Name.Length > 512)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Name", 512);
                }
            }
        }
    }
}
