// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The information about the app's owner
    /// </summary>
    public partial class Owner
    {
        /// <summary>
        /// Initializes a new instance of the Owner class.
        /// </summary>
        public Owner()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Owner class.
        /// </summary>
        /// <param name="id">The unique id (UUID) of the owner</param>
        /// <param name="displayName">The owner's display name</param>
        /// <param name="name">The unique name that used to identify the
        /// owner</param>
        /// <param name="type">The owner type. Can either be 'org' or 'user'.
        /// Possible values include: 'org', 'user'</param>
        /// <param name="avatarUrl">The avatar URL of the owner</param>
        /// <param name="email">The owner's email address</param>
        public Owner(System.Guid id, string displayName, string name, string type, string avatarUrl = default(string), string email = default(string))
        {
            Id = id;
            AvatarUrl = avatarUrl;
            DisplayName = displayName;
            Email = email;
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique id (UUID) of the owner
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the avatar URL of the owner
        /// </summary>
        [JsonProperty(PropertyName = "avatar_url")]
        public string AvatarUrl { get; set; }

        /// <summary>
        /// Gets or sets the owner's display name
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the owner's email address
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the unique name that used to identify the owner
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the owner type. Can either be 'org' or 'user'.
        /// Possible values include: 'org', 'user'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
