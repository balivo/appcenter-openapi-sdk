// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Notification definition object
    /// </summary>
    public partial class NotificationContent
    {
        /// <summary>
        /// Initializes a new instance of the NotificationContent class.
        /// </summary>
        public NotificationContent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationContent class.
        /// </summary>
        /// <param name="name">Notification name</param>
        /// <param name="body">Notification body</param>
        /// <param name="title">Notification title</param>
        /// <param name="customData">Notification custom data(priority,
        /// expiration, etc.)</param>
        public NotificationContent(string name, string body, string title = default(string), IDictionary<string, string> customData = default(IDictionary<string, string>))
        {
            Name = name;
            Title = title;
            Body = body;
            CustomData = customData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets notification name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets notification title
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets notification body
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public string Body { get; set; }

        /// <summary>
        /// Gets or sets notification custom data(priority, expiration, etc.)
        /// </summary>
        [JsonProperty(PropertyName = "custom_data")]
        public IDictionary<string, string> CustomData { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Body == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Body");
            }
            if (Name != null)
            {
                if (Name.Length > 64)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Name", 64);
                }
                if (Name.Length < 3)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 3);
                }
            }
            if (Title != null)
            {
                if (Title.Length > 128)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Title", 128);
                }
            }
            if (Body != null)
            {
                if (Body.Length > 4000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Body", 4000);
                }
                if (Body.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Body", 1);
                }
            }
        }
    }
}
