// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// WNS notification configuration.
    /// </summary>
    [Newtonsoft.Json.JsonObject("wns_config")]
    public partial class NotificationConfigWindows : NotificationConfig
    {
        /// <summary>
        /// Initializes a new instance of the NotificationConfigWindows class.
        /// </summary>
        public NotificationConfigWindows()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationConfigWindows class.
        /// </summary>
        /// <param name="packageSid">Package security identifier (SID).</param>
        /// <param name="secretKey">Secret key.</param>
        public NotificationConfigWindows(string packageSid, string secretKey)
        {
            PackageSid = packageSid;
            SecretKey = secretKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets package security identifier (SID).
        /// </summary>
        [JsonProperty(PropertyName = "package_sid")]
        public string PackageSid { get; set; }

        /// <summary>
        /// Gets or sets secret key.
        /// </summary>
        [JsonProperty(PropertyName = "secret_key")]
        public string SecretKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PackageSid == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PackageSid");
            }
            if (SecretKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SecretKey");
            }
        }
    }
}
