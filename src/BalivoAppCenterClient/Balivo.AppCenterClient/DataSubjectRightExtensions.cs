// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DataSubjectRight.
    /// </summary>
    public static partial class DataSubjectRightExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            public static object CancelExportRequest(this IDataSubjectRight operations, System.Guid token)
            {
                return operations.CancelExportRequestAsync(token).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CancelExportRequestAsync(this IDataSubjectRight operations, System.Guid token, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CancelExportRequestWithHttpMessagesAsync(token, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            public static DataSubjectRightStatusResponse ExportStatusRequest(this IDataSubjectRight operations, System.Guid token)
            {
                return operations.ExportStatusRequestAsync(token).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataSubjectRightStatusResponse> ExportStatusRequestAsync(this IDataSubjectRight operations, System.Guid token, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ExportStatusRequestWithHttpMessagesAsync(token, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static DataSubjectRightResponse ExportRequest(this IDataSubjectRight operations)
            {
                return operations.ExportRequestAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataSubjectRightResponse> ExportRequestAsync(this IDataSubjectRight operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ExportRequestWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='email'>
            /// </param>
            public static object CancelDeleteRequest(this IDataSubjectRight operations, System.Guid token, DataSubjectRightEmailRequest email = default(DataSubjectRightEmailRequest))
            {
                return operations.CancelDeleteRequestAsync(token, email).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='email'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CancelDeleteRequestAsync(this IDataSubjectRight operations, System.Guid token, DataSubjectRightEmailRequest email = default(DataSubjectRightEmailRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CancelDeleteRequestWithHttpMessagesAsync(token, email, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='email'>
            /// Email used for delete with x-authz-bypass headers
            /// </param>
            public static DataSubjectRightStatusResponse DeleteStatusRequest(this IDataSubjectRight operations, System.Guid token, string email)
            {
                return operations.DeleteStatusRequestAsync(token, email).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Unique request ID (GUID)
            /// </param>
            /// <param name='email'>
            /// Email used for delete with x-authz-bypass headers
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataSubjectRightStatusResponse> DeleteStatusRequestAsync(this IDataSubjectRight operations, System.Guid token, string email, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteStatusRequestWithHttpMessagesAsync(token, email, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static DataSubjectRightResponse DeleteRequest(this IDataSubjectRight operations)
            {
                return operations.DeleteRequestAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DataSubjectRightResponse> DeleteRequestAsync(this IDataSubjectRight operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteRequestWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
