// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class HandledErrorReasonFrame
    {
        /// <summary>
        /// Initializes a new instance of the HandledErrorReasonFrame class.
        /// </summary>
        public HandledErrorReasonFrame()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HandledErrorReasonFrame class.
        /// </summary>
        /// <param name="className">name of the class</param>
        /// <param name="method">name of the method</param>
        /// <param name="classMethod">is a class method</param>
        /// <param name="file">name of the file</param>
        /// <param name="line">line number</param>
        /// <param name="appCode">this line isn't from any framework</param>
        /// <param name="frameworkName">Name of the framework</param>
        /// <param name="codeFormatted">Formatted frame string</param>
        /// <param name="codeRaw">Unformatted Frame string</param>
        /// <param name="language">programming language of the frame. Possible
        /// values include: 'JavaScript', 'CSharp', 'Objective-C',
        /// 'Objective-Cpp', 'Cpp', 'C', 'Swift', 'Java', 'Unknown'</param>
        /// <param name="methodParams">parameters of the frames method</param>
        /// <param name="exceptionType">Exception type.</param>
        /// <param name="osExceptionType">OS exception type. (aka.
        /// SIGNAL)</param>
        public HandledErrorReasonFrame(string className = default(string), string method = default(string), bool? classMethod = default(bool?), string file = default(string), int? line = default(int?), bool? appCode = default(bool?), string frameworkName = default(string), string codeFormatted = default(string), string codeRaw = default(string), string language = default(string), string methodParams = default(string), string exceptionType = default(string), string osExceptionType = default(string))
        {
            ClassName = className;
            Method = method;
            ClassMethod = classMethod;
            File = file;
            Line = line;
            AppCode = appCode;
            FrameworkName = frameworkName;
            CodeFormatted = codeFormatted;
            CodeRaw = codeRaw;
            Language = language;
            MethodParams = methodParams;
            ExceptionType = exceptionType;
            OsExceptionType = osExceptionType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets name of the class
        /// </summary>
        [JsonProperty(PropertyName = "className")]
        public string ClassName { get; set; }

        /// <summary>
        /// Gets or sets name of the method
        /// </summary>
        [JsonProperty(PropertyName = "method")]
        public string Method { get; set; }

        /// <summary>
        /// Gets or sets is a class method
        /// </summary>
        [JsonProperty(PropertyName = "classMethod")]
        public bool? ClassMethod { get; set; }

        /// <summary>
        /// Gets or sets name of the file
        /// </summary>
        [JsonProperty(PropertyName = "file")]
        public string File { get; set; }

        /// <summary>
        /// Gets or sets line number
        /// </summary>
        [JsonProperty(PropertyName = "line")]
        public int? Line { get; set; }

        /// <summary>
        /// Gets or sets this line isn't from any framework
        /// </summary>
        [JsonProperty(PropertyName = "appCode")]
        public bool? AppCode { get; set; }

        /// <summary>
        /// Gets or sets name of the framework
        /// </summary>
        [JsonProperty(PropertyName = "frameworkName")]
        public string FrameworkName { get; set; }

        /// <summary>
        /// Gets or sets formatted frame string
        /// </summary>
        [JsonProperty(PropertyName = "codeFormatted")]
        public string CodeFormatted { get; set; }

        /// <summary>
        /// Gets or sets unformatted Frame string
        /// </summary>
        [JsonProperty(PropertyName = "codeRaw")]
        public string CodeRaw { get; set; }

        /// <summary>
        /// Gets or sets programming language of the frame. Possible values
        /// include: 'JavaScript', 'CSharp', 'Objective-C', 'Objective-Cpp',
        /// 'Cpp', 'C', 'Swift', 'Java', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets or sets parameters of the frames method
        /// </summary>
        [JsonProperty(PropertyName = "methodParams")]
        public string MethodParams { get; set; }

        /// <summary>
        /// Gets or sets exception type.
        /// </summary>
        [JsonProperty(PropertyName = "exceptionType")]
        public string ExceptionType { get; set; }

        /// <summary>
        /// Gets or sets OS exception type. (aka. SIGNAL)
        /// </summary>
        [JsonProperty(PropertyName = "osExceptionType")]
        public string OsExceptionType { get; set; }

    }
}
