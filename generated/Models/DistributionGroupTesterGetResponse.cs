// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DistributionGroupTesterGetResponse
    {
        /// <summary>
        /// Initializes a new instance of the
        /// DistributionGroupTesterGetResponse class.
        /// </summary>
        public DistributionGroupTesterGetResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// DistributionGroupTesterGetResponse class.
        /// </summary>
        /// <param name="name">The unique name that is used to identify the
        /// tester.</param>
        /// <param name="email">The email address of the tester</param>
        /// <param name="displayName">The full name of the tester. Might for
        /// example be first and last name</param>
        public DistributionGroupTesterGetResponse(string name, string email, string displayName = default(string))
        {
            DisplayName = displayName;
            Name = name;
            Email = email;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the full name of the tester. Might for example be
        /// first and last name
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the unique name that is used to identify the tester.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the email address of the tester
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Email == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Email");
            }
        }
    }
}
