// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Apple secret details
    /// </summary>
    public partial class AppleMultifactorSecretDetails
    {
        /// <summary>
        /// Initializes a new instance of the AppleMultifactorSecretDetails
        /// class.
        /// </summary>
        public AppleMultifactorSecretDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppleMultifactorSecretDetails
        /// class.
        /// </summary>
        /// <param name="username">username to connect to apple store.</param>
        /// <param name="password">password to connect to apple store.</param>
        /// <param name="authCode">The 6 digit Apple OTP for Multifactor
        /// accounts</param>
        /// <param name="appSpecificPassword">The app specific password
        /// required for app publishing for 2FA accounts</param>
        public AppleMultifactorSecretDetails(string username, string password, string authCode, string appSpecificPassword = default(string))
        {
            Username = username;
            Password = password;
            AuthCode = authCode;
            AppSpecificPassword = appSpecificPassword;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets username to connect to apple store.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets password to connect to apple store.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the 6 digit Apple OTP for Multifactor accounts
        /// </summary>
        [JsonProperty(PropertyName = "authCode")]
        public string AuthCode { get; set; }

        /// <summary>
        /// Gets or sets the app specific password required for app publishing
        /// for 2FA accounts
        /// </summary>
        [JsonProperty(PropertyName = "appSpecificPassword")]
        public string AppSpecificPassword { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Username == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Username");
            }
            if (Password == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Password");
            }
            if (AuthCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AuthCode");
            }
        }
    }
}
