// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// PrivateSharedConnectionResponse
    /// </summary>
    public partial class PrivateSharedConnectionResponse
    {
        /// <summary>
        /// Initializes a new instance of the PrivateSharedConnectionResponse
        /// class.
        /// </summary>
        public PrivateSharedConnectionResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateSharedConnectionResponse
        /// class.
        /// </summary>
        /// <param name="id">id of the shared connection</param>
        /// <param name="displayName">display name of shared connection</param>
        /// <param name="isValid">whether the credentials are valid or
        /// not</param>
        /// <param name="is2FA">if the account is a 2FA account or not</param>
        public PrivateSharedConnectionResponse(string id, string displayName = default(string), bool? isValid = default(bool?), bool? is2FA = default(bool?))
        {
            Id = id;
            DisplayName = displayName;
            IsValid = isValid;
            Is2FA = is2FA;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets id of the shared connection
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets display name of shared connection
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets whether the credentials are valid or not
        /// </summary>
        [JsonProperty(PropertyName = "isValid")]
        public bool? IsValid { get; set; }

        /// <summary>
        /// Gets or sets if the account is a 2FA account or not
        /// </summary>
        [JsonProperty(PropertyName = "is2FA")]
        public bool? Is2FA { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
