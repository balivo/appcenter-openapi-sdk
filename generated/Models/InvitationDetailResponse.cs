// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class InvitationDetailResponse
    {
        /// <summary>
        /// Initializes a new instance of the InvitationDetailResponse class.
        /// </summary>
        public InvitationDetailResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InvitationDetailResponse class.
        /// </summary>
        /// <param name="invitationId">The id of the invitation</param>
        public InvitationDetailResponse(System.Guid invitationId, UserProfileResponse invitedBy, OrganizationResponse organization = default(OrganizationResponse), AppResponse app = default(AppResponse))
        {
            InvitationId = invitationId;
            InvitedBy = invitedBy;
            Organization = organization;
            App = app;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the invitation
        /// </summary>
        [JsonProperty(PropertyName = "invitation_id")]
        public System.Guid InvitationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invited_by")]
        public UserProfileResponse InvitedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organization")]
        public OrganizationResponse Organization { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app")]
        public AppResponse App { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (InvitedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "InvitedBy");
            }
            if (InvitedBy != null)
            {
                InvitedBy.Validate();
            }
            if (Organization != null)
            {
                Organization.Validate();
            }
            if (App != null)
            {
                App.Validate();
            }
        }
    }
}
