// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CodePushReleaseInfo
    {
        /// <summary>
        /// Initializes a new instance of the CodePushReleaseInfo class.
        /// </summary>
        public CodePushReleaseInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CodePushReleaseInfo class.
        /// </summary>
        public CodePushReleaseInfo(string targetBinaryRange = default(string), string description = default(string), bool? isDisabled = default(bool?), bool? isMandatory = default(bool?), int? rollout = default(int?))
        {
            TargetBinaryRange = targetBinaryRange;
            Description = description;
            IsDisabled = isDisabled;
            IsMandatory = isMandatory;
            Rollout = rollout;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target_binary_range")]
        public string TargetBinaryRange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_disabled")]
        public bool? IsDisabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_mandatory")]
        public bool? IsMandatory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rollout")]
        public int? Rollout { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Rollout > 100)
            {
                throw new ValidationException(ValidationRules.InclusiveMaximum, "Rollout", 100);
            }
            if (Rollout < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Rollout", 1);
            }
        }
    }
}
