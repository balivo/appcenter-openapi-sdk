// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AADTenantAddRequest
    {
        /// <summary>
        /// Initializes a new instance of the AADTenantAddRequest class.
        /// </summary>
        public AADTenantAddRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AADTenantAddRequest class.
        /// </summary>
        /// <param name="userId">The user wanting to add this tenant to the
        /// organization, must be an admin of the organization</param>
        /// <param name="aadTenantId">The AAD tenant id</param>
        /// <param name="displayName">The name of the AAD Tenant</param>
        public AADTenantAddRequest(System.Guid userId, System.Guid aadTenantId, string displayName)
        {
            UserId = userId;
            AadTenantId = aadTenantId;
            DisplayName = displayName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the user wanting to add this tenant to the
        /// organization, must be an admin of the organization
        /// </summary>
        [JsonProperty(PropertyName = "user_id")]
        public System.Guid UserId { get; set; }

        /// <summary>
        /// Gets or sets the AAD tenant id
        /// </summary>
        [JsonProperty(PropertyName = "aad_tenant_id")]
        public System.Guid AadTenantId { get; set; }

        /// <summary>
        /// Gets or sets the name of the AAD Tenant
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
        }
    }
}
