// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class StepReportDeviceScreenshotsItemScreenshotUrls
    {
        /// <summary>
        /// Initializes a new instance of the
        /// StepReportDeviceScreenshotsItemScreenshotUrls class.
        /// </summary>
        public StepReportDeviceScreenshotsItemScreenshotUrls()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// StepReportDeviceScreenshotsItemScreenshotUrls class.
        /// </summary>
        public StepReportDeviceScreenshotsItemScreenshotUrls(string original, string small, string medium, string large)
        {
            Original = original;
            Small = small;
            Medium = medium;
            Large = large;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "original")]
        public string Original { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "small")]
        public string Small { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "medium")]
        public string Medium { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "large")]
        public string Large { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Original == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Original");
            }
            if (Small == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Small");
            }
            if (Medium == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Medium");
            }
            if (Large == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Large");
            }
        }
    }
}
