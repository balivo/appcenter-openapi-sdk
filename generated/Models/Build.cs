// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Build
    {
        /// <summary>
        /// Initializes a new instance of the Build class.
        /// </summary>
        public Build()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Build class.
        /// </summary>
        /// <param name="id">The build ID</param>
        /// <param name="buildNumber">The build number</param>
        /// <param name="queueTime">The time the build was queued</param>
        /// <param name="status">The build status</param>
        /// <param name="result">The build result</param>
        /// <param name="sourceBranch">The source branch name</param>
        /// <param name="sourceVersion">The source SHA</param>
        /// <param name="startTime">The time the build was started</param>
        /// <param name="finishTime">The time the build was finished</param>
        /// <param name="lastChangedDate">The time the build status was last
        /// changed</param>
        public Build(int id, string buildNumber, string queueTime, string status, string result, string sourceBranch, string sourceVersion, string startTime = default(string), string finishTime = default(string), string lastChangedDate = default(string))
        {
            Id = id;
            BuildNumber = buildNumber;
            QueueTime = queueTime;
            StartTime = startTime;
            FinishTime = finishTime;
            LastChangedDate = lastChangedDate;
            Status = status;
            Result = result;
            SourceBranch = sourceBranch;
            SourceVersion = sourceVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the build ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the build number
        /// </summary>
        [JsonProperty(PropertyName = "buildNumber")]
        public string BuildNumber { get; set; }

        /// <summary>
        /// Gets or sets the time the build was queued
        /// </summary>
        [JsonProperty(PropertyName = "queueTime")]
        public string QueueTime { get; set; }

        /// <summary>
        /// Gets or sets the time the build was started
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Gets or sets the time the build was finished
        /// </summary>
        [JsonProperty(PropertyName = "finishTime")]
        public string FinishTime { get; set; }

        /// <summary>
        /// Gets or sets the time the build status was last changed
        /// </summary>
        [JsonProperty(PropertyName = "lastChangedDate")]
        public string LastChangedDate { get; set; }

        /// <summary>
        /// Gets or sets the build status
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the build result
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public string Result { get; set; }

        /// <summary>
        /// Gets or sets the source branch name
        /// </summary>
        [JsonProperty(PropertyName = "sourceBranch")]
        public string SourceBranch { get; set; }

        /// <summary>
        /// Gets or sets the source SHA
        /// </summary>
        [JsonProperty(PropertyName = "sourceVersion")]
        public string SourceVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BuildNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BuildNumber");
            }
            if (QueueTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "QueueTime");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (Result == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Result");
            }
            if (SourceBranch == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceBranch");
            }
            if (SourceVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceVersion");
            }
            if (Id <= 0)
            {
                throw new ValidationException(ValidationRules.ExclusiveMinimum, "Id", 0);
            }
        }
    }
}
