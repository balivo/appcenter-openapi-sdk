// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Details of an uploaded release
    /// </summary>
    public partial class StoresReleaseDetails
    {
        /// <summary>
        /// Initializes a new instance of the StoresReleaseDetails class.
        /// </summary>
        public StoresReleaseDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StoresReleaseDetails class.
        /// </summary>
        /// <param name="id">ID identifying this unique release.</param>
        /// <param name="status">OBSOLETE. Will be removed in next version. The
        /// availability concept is now replaced with distributed. Any
        /// 'available' release will be associated with the default
        /// distribution group of an app.&lt;/br&gt;
        /// The release state.&lt;br&gt;
        /// &lt;b&gt;available&lt;/b&gt;: The uploaded release has been
        /// distributed.&lt;br&gt;
        /// &lt;b&gt;unavailable&lt;/b&gt;: The uploaded release is not visible
        /// to the user. &lt;br&gt;
        /// . Possible values include: 'available', 'unavailable'</param>
        /// <param name="appName">The app's name (extracted from the uploaded
        /// release).</param>
        /// <param name="appDisplayName">The app's display name.</param>
        /// <param name="version">The release's version.&lt;br&gt;
        /// For iOS: CFBundleVersion from info.plist.
        /// For Android: android:versionCode from AppManifest.xml.
        /// </param>
        /// <param name="shortVersion">The release's short version.&lt;br&gt;
        /// For iOS: CFBundleShortVersionString from info.plist.
        /// For Android: android:versionName from AppManifest.xml.
        /// </param>
        /// <param name="releaseNotes">The release's release notes.</param>
        /// <param name="size">The release's size in bytes.</param>
        /// <param name="minOs">The release's minimum required operating
        /// system.</param>
        /// <param name="androidMinApiLevel">The release's minimum required
        /// Android API level.</param>
        /// <param name="bundleIdentifier">The identifier of the apps
        /// bundle.</param>
        /// <param name="fingerprint">MD5 checksum of the release
        /// binary.</param>
        /// <param name="uploadedAt">UTC time in ISO 8601 format of the
        /// uploaded time.</param>
        /// <param name="downloadUrl">The URL that hosts the binary for this
        /// release.</param>
        /// <param name="installUrl">The href required to install a release on
        /// a mobile device. On iOS devices will be prefixed with
        /// `itms-services://?action=download-manifest&amp;url=`. Possible
        /// values include: 'group', 'store'</param>
        /// <param name="distributionStores">a list of distribution stores that
        /// are associated with this release.</param>
        public StoresReleaseDetails(double? id = default(double?), string status = default(string), string appName = default(string), string appDisplayName = default(string), string version = default(string), string shortVersion = default(string), string releaseNotes = default(string), double? size = default(double?), string minOs = default(string), string androidMinApiLevel = default(string), string bundleIdentifier = default(string), string fingerprint = default(string), string uploadedAt = default(string), string downloadUrl = default(string), string installUrl = default(string), object distributionStores = default(object))
        {
            Id = id;
            Status = status;
            AppName = appName;
            AppDisplayName = appDisplayName;
            Version = version;
            ShortVersion = shortVersion;
            ReleaseNotes = releaseNotes;
            Size = size;
            MinOs = minOs;
            AndroidMinApiLevel = androidMinApiLevel;
            BundleIdentifier = bundleIdentifier;
            Fingerprint = fingerprint;
            UploadedAt = uploadedAt;
            DownloadUrl = downloadUrl;
            InstallUrl = installUrl;
            DistributionStores = distributionStores;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ID identifying this unique release.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public double? Id { get; set; }

        /// <summary>
        /// Gets or sets OBSOLETE. Will be removed in next version. The
        /// availability concept is now replaced with distributed. Any
        /// 'available' release will be associated with the default
        /// distribution group of an app.&amp;lt;/br&amp;gt;
        /// The release state.&amp;lt;br&amp;gt;
        /// &amp;lt;b&amp;gt;available&amp;lt;/b&amp;gt;: The uploaded release
        /// has been distributed.&amp;lt;br&amp;gt;
        /// &amp;lt;b&amp;gt;unavailable&amp;lt;/b&amp;gt;: The uploaded
        /// release is not visible to the user. &amp;lt;br&amp;gt;
        /// . Possible values include: 'available', 'unavailable'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the app's name (extracted from the uploaded release).
        /// </summary>
        [JsonProperty(PropertyName = "app_name")]
        public string AppName { get; set; }

        /// <summary>
        /// Gets or sets the app's display name.
        /// </summary>
        [JsonProperty(PropertyName = "app_display_name")]
        public string AppDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the release's version.&amp;lt;br&amp;gt;
        /// For iOS: CFBundleVersion from info.plist.
        /// For Android: android:versionCode from AppManifest.xml.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the release's short version.&amp;lt;br&amp;gt;
        /// For iOS: CFBundleShortVersionString from info.plist.
        /// For Android: android:versionName from AppManifest.xml.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "short_version")]
        public string ShortVersion { get; set; }

        /// <summary>
        /// Gets or sets the release's release notes.
        /// </summary>
        [JsonProperty(PropertyName = "release_notes")]
        public string ReleaseNotes { get; set; }

        /// <summary>
        /// Gets or sets the release's size in bytes.
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public double? Size { get; set; }

        /// <summary>
        /// Gets or sets the release's minimum required operating system.
        /// </summary>
        [JsonProperty(PropertyName = "min_os")]
        public string MinOs { get; set; }

        /// <summary>
        /// Gets or sets the release's minimum required Android API level.
        /// </summary>
        [JsonProperty(PropertyName = "android_min_api_level")]
        public string AndroidMinApiLevel { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the apps bundle.
        /// </summary>
        [JsonProperty(PropertyName = "bundle_identifier")]
        public string BundleIdentifier { get; set; }

        /// <summary>
        /// Gets or sets MD5 checksum of the release binary.
        /// </summary>
        [JsonProperty(PropertyName = "fingerprint")]
        public string Fingerprint { get; set; }

        /// <summary>
        /// Gets or sets UTC time in ISO 8601 format of the uploaded time.
        /// </summary>
        [JsonProperty(PropertyName = "uploaded_at")]
        public string UploadedAt { get; set; }

        /// <summary>
        /// Gets or sets the URL that hosts the binary for this release.
        /// </summary>
        [JsonProperty(PropertyName = "download_url")]
        public string DownloadUrl { get; set; }

        /// <summary>
        /// Gets or sets the href required to install a release on a mobile
        /// device. On iOS devices will be prefixed with
        /// `itms-services://?action=download-manifest&amp;amp;url=`. Possible
        /// values include: 'group', 'store'
        /// </summary>
        [JsonProperty(PropertyName = "install_url")]
        public string InstallUrl { get; set; }

        /// <summary>
        /// Gets or sets a list of distribution stores that are associated with
        /// this release.
        /// </summary>
        [JsonProperty(PropertyName = "distribution_stores")]
        public object DistributionStores { get; set; }

    }
}
