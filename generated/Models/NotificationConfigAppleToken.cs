// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Apple notification auth token configuration.
    /// </summary>
    [Newtonsoft.Json.JsonObject("apns_token_config")]
    public partial class NotificationConfigAppleToken : NotificationConfig
    {
        /// <summary>
        /// Initializes a new instance of the NotificationConfigAppleToken
        /// class.
        /// </summary>
        public NotificationConfigAppleToken()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NotificationConfigAppleToken
        /// class.
        /// </summary>
        /// <param name="keyId">A 10-character key identifier (kid).</param>
        /// <param name="id">Application ID.</param>
        /// <param name="prefix">Application prefix.</param>
        /// <param name="token">Provider Authentication Token.</param>
        /// <param name="endpointType">Possible values include: 'production',
        /// 'sandbox'</param>
        public NotificationConfigAppleToken(string keyId, string id, string prefix, string token, string endpointType)
        {
            KeyId = keyId;
            Id = id;
            Prefix = prefix;
            Token = token;
            EndpointType = endpointType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a 10-character key identifier (kid).
        /// </summary>
        [JsonProperty(PropertyName = "key_id")]
        public string KeyId { get; set; }

        /// <summary>
        /// Gets or sets application ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets application prefix.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or sets provider Authentication Token.
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public string Token { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'production', 'sandbox'
        /// </summary>
        [JsonProperty(PropertyName = "endpoint_type")]
        public string EndpointType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (KeyId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "KeyId");
            }
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Prefix == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Prefix");
            }
            if (Token == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Token");
            }
            if (EndpointType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndpointType");
            }
        }
    }
}
