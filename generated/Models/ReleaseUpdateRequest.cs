// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A request containing information for updating a release.
    /// </summary>
    public partial class ReleaseUpdateRequest
    {
        /// <summary>
        /// Initializes a new instance of the ReleaseUpdateRequest class.
        /// </summary>
        public ReleaseUpdateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReleaseUpdateRequest class.
        /// </summary>
        /// <param name="distributionGroupName">OBSOLETE. Will be removed in
        /// future releases - use destinations instead. Name of a distribution
        /// group. The release will be associated with this distribution group.
        /// If the distribution group doesn't exist a 400 is returned. If both
        /// distribution group name and id are passed, the id is taking
        /// precedence.
        /// </param>
        /// <param name="distributionGroupId">OBSOLETE. Will be removed in
        /// future releases - use destinations instead. Id of a distribution
        /// group. The release will be associated with this distribution group.
        /// If the distribution group doesn't exist a 400 is returned. If both
        /// distribution group name and id are passed, the id is taking
        /// precedence.
        /// </param>
        /// <param name="destinationName">OBSOLETE. Will be removed in future
        /// releases - use destinations instead. Name of a destination. The
        /// release will be associated with this destination. If the
        /// destination doesn't exist a 400 is returned. If both distribution
        /// group name and id are passed, the id is taking precedence.
        /// </param>
        /// <param name="destinationId">OBSOLETE. Will be removed in future
        /// releases - use destinations instead. Id of a destination. The
        /// release will be associated with this destination. If the
        /// destination doesn't exist a 400 is returned. If both destination
        /// name and id are passed, the id is taking precedence.
        /// </param>
        /// <param name="destinationType">Not used anymore.</param>
        /// <param name="releaseNotes">Release notes for this release.</param>
        /// <param name="mandatoryUpdate">A boolean which determines whether
        /// this version should be a mandatory update or not.</param>
        /// <param name="destinations">Distribute this release under the
        /// following list of destinations (store groups or distribution
        /// groups).</param>
        /// <param name="notifyTesters">A boolean which determines whether to
        /// notify testers of a new release, default to true.</param>
        public ReleaseUpdateRequest(string distributionGroupName = default(string), string distributionGroupId = default(string), string destinationName = default(string), string destinationId = default(string), string destinationType = default(string), string releaseNotes = default(string), bool? mandatoryUpdate = default(bool?), IList<DestinationId> destinations = default(IList<DestinationId>), BuildInfo build = default(BuildInfo), bool? notifyTesters = default(bool?))
        {
            DistributionGroupName = distributionGroupName;
            DistributionGroupId = distributionGroupId;
            DestinationName = destinationName;
            DestinationId = destinationId;
            DestinationType = destinationType;
            ReleaseNotes = releaseNotes;
            MandatoryUpdate = mandatoryUpdate;
            Destinations = destinations;
            Build = build;
            NotifyTesters = notifyTesters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets OBSOLETE. Will be removed in future releases - use
        /// destinations instead. Name of a distribution group. The release
        /// will be associated with this distribution group. If the
        /// distribution group doesn't exist a 400 is returned. If both
        /// distribution group name and id are passed, the id is taking
        /// precedence.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "distribution_group_name")]
        public string DistributionGroupName { get; set; }

        /// <summary>
        /// Gets or sets OBSOLETE. Will be removed in future releases - use
        /// destinations instead. Id of a distribution group. The release will
        /// be associated with this distribution group. If the distribution
        /// group doesn't exist a 400 is returned. If both distribution group
        /// name and id are passed, the id is taking precedence.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "distribution_group_id")]
        public string DistributionGroupId { get; set; }

        /// <summary>
        /// Gets or sets OBSOLETE. Will be removed in future releases - use
        /// destinations instead. Name of a destination. The release will be
        /// associated with this destination. If the destination doesn't exist
        /// a 400 is returned. If both distribution group name and id are
        /// passed, the id is taking precedence.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "destination_name")]
        public string DestinationName { get; set; }

        /// <summary>
        /// Gets or sets OBSOLETE. Will be removed in future releases - use
        /// destinations instead. Id of a destination. The release will be
        /// associated with this destination. If the destination doesn't exist
        /// a 400 is returned. If both destination name and id are passed, the
        /// id is taking precedence.
        ///
        /// </summary>
        [JsonProperty(PropertyName = "destination_id")]
        public string DestinationId { get; set; }

        /// <summary>
        /// Gets or sets not used anymore.
        /// </summary>
        [JsonProperty(PropertyName = "destination_type")]
        public string DestinationType { get; set; }

        /// <summary>
        /// Gets or sets release notes for this release.
        /// </summary>
        [JsonProperty(PropertyName = "release_notes")]
        public string ReleaseNotes { get; set; }

        /// <summary>
        /// Gets or sets a boolean which determines whether this version should
        /// be a mandatory update or not.
        /// </summary>
        [JsonProperty(PropertyName = "mandatory_update")]
        public bool? MandatoryUpdate { get; set; }

        /// <summary>
        /// Gets or sets distribute this release under the following list of
        /// destinations (store groups or distribution groups).
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        public IList<DestinationId> Destinations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "build")]
        public BuildInfo Build { get; set; }

        /// <summary>
        /// Gets or sets a boolean which determines whether to notify testers
        /// of a new release, default to true.
        /// </summary>
        [JsonProperty(PropertyName = "notify_testers")]
        public bool? NotifyTesters { get; set; }

    }
}
