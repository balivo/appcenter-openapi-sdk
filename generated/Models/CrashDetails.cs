// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CrashDetails
    {
        /// <summary>
        /// Initializes a new instance of the CrashDetails class.
        /// </summary>
        public CrashDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CrashDetails class.
        /// </summary>
        /// <param name="locale">Language code (example: en_US).
        /// </param>
        /// <param name="rooted">Whether the device where the crash occurred is
        /// rooted or jailbroken
        /// </param>
        /// <param name="screenSize">Screen size of the device in pixels
        /// (example: 640x480).
        /// </param>
        /// <param name="carrierCountry">Carrier country code (for mobile
        /// devices).
        /// </param>
        /// <param name="carrierName">Carrier name (for mobile devices).
        /// </param>
        /// <param name="osBuild">OS build code (example: LMY47X).
        /// </param>
        /// <param name="appStartTimestamp">Application launch timestamp
        /// (example: 1985-04-12T23:20:50.52Z).
        /// </param>
        public CrashDetails(string locale, bool rooted, string screenSize, string carrierCountry = default(string), string carrierName = default(string), string osBuild = default(string), System.DateTime? appStartTimestamp = default(System.DateTime?))
        {
            CarrierCountry = carrierCountry;
            CarrierName = carrierName;
            Locale = locale;
            OsBuild = osBuild;
            Rooted = rooted;
            ScreenSize = screenSize;
            AppStartTimestamp = appStartTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets carrier country code (for mobile devices).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "carrier_country")]
        public string CarrierCountry { get; set; }

        /// <summary>
        /// Gets or sets carrier name (for mobile devices).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "carrier_name")]
        public string CarrierName { get; set; }

        /// <summary>
        /// Gets or sets language code (example: en_US).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or sets OS build code (example: LMY47X).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "os_build")]
        public string OsBuild { get; set; }

        /// <summary>
        /// Gets or sets whether the device where the crash occurred is rooted
        /// or jailbroken
        ///
        /// </summary>
        [JsonProperty(PropertyName = "rooted")]
        public bool Rooted { get; set; }

        /// <summary>
        /// Gets or sets screen size of the device in pixels (example:
        /// 640x480).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "screen_size")]
        public string ScreenSize { get; set; }

        /// <summary>
        /// Gets or sets application launch timestamp (example:
        /// 1985-04-12T23:20:50.52Z).
        ///
        /// </summary>
        [JsonProperty(PropertyName = "app_start_timestamp")]
        public System.DateTime? AppStartTimestamp { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Locale == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Locale");
            }
            if (ScreenSize == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ScreenSize");
            }
        }
    }
}
