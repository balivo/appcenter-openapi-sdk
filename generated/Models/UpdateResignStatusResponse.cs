// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// URL that can be used to check the status of the update devices
    /// operation and the updated profiles.
    /// </summary>
    public partial class UpdateResignStatusResponse
    {
        /// <summary>
        /// Initializes a new instance of the UpdateResignStatusResponse class.
        /// </summary>
        public UpdateResignStatusResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateResignStatusResponse class.
        /// </summary>
        /// <param name="status">The status.</param>
        /// <param name="profilesZipBase64">A zip of the updated provisioning
        /// profiles. Base64 encoded.</param>
        public UpdateResignStatusResponse(string status, string profilesZipBase64 = default(string))
        {
            Status = status;
            ProfilesZipBase64 = profilesZipBase64;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the status.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets a zip of the updated provisioning profiles. Base64
        /// encoded.
        /// </summary>
        [JsonProperty(PropertyName = "profiles_zip_base64")]
        public string ProfilesZipBase64 { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
        }
    }
}
