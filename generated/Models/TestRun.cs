// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Test Run
    /// </summary>
    /// <remarks>
    /// Summary single test run on Xamarin Test Cloud
    /// </remarks>
    public partial class TestRun
    {
        /// <summary>
        /// Initializes a new instance of the TestRun class.
        /// </summary>
        public TestRun()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TestRun class.
        /// </summary>
        /// <param name="id">The unique id of the test upload</param>
        /// <param name="date">The date and time the test was uploaded</param>
        /// <param name="appVersion">The compiled version of the app
        /// binary</param>
        /// <param name="testSeries">The name of the test series with which
        /// this test upload is associated</param>
        /// <param name="platform">The device platform targeted by the test.
        /// Possible values are 'ios' or 'android'</param>
        /// <param name="runStatus">The current status of the test run, in
        /// relation to the various phases</param>
        /// <param name="resultStatus">The passed/failed state</param>
        /// <param name="state">Deprecated. Use runStatus instead.</param>
        /// <param name="status">Deprecated. Use resultStatus instead.</param>
        /// <param name="description">Human readable explanation of the current
        /// test status</param>
        /// <param name="testType">The name of the test framework used to run
        /// this test</param>
        public TestRun(System.Guid? id = default(System.Guid?), string date = default(string), string appVersion = default(string), string testSeries = default(string), string platform = default(string), string runStatus = default(string), string resultStatus = default(string), string state = default(string), string status = default(string), string description = default(string), TestRunStatistics stats = default(TestRunStatistics), string testType = default(string))
        {
            Id = id;
            Date = date;
            AppVersion = appVersion;
            TestSeries = testSeries;
            Platform = platform;
            RunStatus = runStatus;
            ResultStatus = resultStatus;
            State = state;
            Status = status;
            Description = description;
            Stats = stats;
            TestType = testType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique id of the test upload
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets the date and time the test was uploaded
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public string Date { get; set; }

        /// <summary>
        /// Gets or sets the compiled version of the app binary
        /// </summary>
        [JsonProperty(PropertyName = "appVersion")]
        public string AppVersion { get; set; }

        /// <summary>
        /// Gets or sets the name of the test series with which this test
        /// upload is associated
        /// </summary>
        [JsonProperty(PropertyName = "testSeries")]
        public string TestSeries { get; set; }

        /// <summary>
        /// Gets or sets the device platform targeted by the test. Possible
        /// values are 'ios' or 'android'
        /// </summary>
        [JsonProperty(PropertyName = "platform")]
        public string Platform { get; set; }

        /// <summary>
        /// Gets or sets the current status of the test run, in relation to the
        /// various phases
        /// </summary>
        [JsonProperty(PropertyName = "runStatus")]
        public string RunStatus { get; set; }

        /// <summary>
        /// Gets or sets the passed/failed state
        /// </summary>
        [JsonProperty(PropertyName = "resultStatus")]
        public string ResultStatus { get; set; }

        /// <summary>
        /// Gets or sets deprecated. Use runStatus instead.
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets deprecated. Use resultStatus instead.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets human readable explanation of the current test status
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stats")]
        public TestRunStatistics Stats { get; set; }

        /// <summary>
        /// Gets or sets the name of the test framework used to run this test
        /// </summary>
        [JsonProperty(PropertyName = "testType")]
        public string TestType { get; set; }

    }
}
