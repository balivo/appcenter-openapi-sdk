// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Apple credentials needed to log into the Apple Developer Portal
    /// </summary>
    public partial class AppleLoginRequest
    {
        /// <summary>
        /// Initializes a new instance of the AppleLoginRequest class.
        /// </summary>
        public AppleLoginRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AppleLoginRequest class.
        /// </summary>
        /// <param name="username">The username for the Apple Developer
        /// account.</param>
        /// <param name="password">The password for the Apple Developer
        /// account.</param>
        /// <param name="teamIdentifier">Identifier of the team to use when
        /// logged in.</param>
        /// <param name="cookie">The 30-day session cookie for multi-factor
        /// authentication backed accounts.</param>
        public AppleLoginRequest(string username, string password, string teamIdentifier = default(string), string cookie = default(string))
        {
            Username = username;
            Password = password;
            TeamIdentifier = teamIdentifier;
            Cookie = cookie;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the username for the Apple Developer account.
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets the password for the Apple Developer account.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets identifier of the team to use when logged in.
        /// </summary>
        [JsonProperty(PropertyName = "team_identifier")]
        public string TeamIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the 30-day session cookie for multi-factor
        /// authentication backed accounts.
        /// </summary>
        [JsonProperty(PropertyName = "cookie")]
        public string Cookie { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Username == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Username");
            }
            if (Password == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Password");
            }
        }
    }
}
