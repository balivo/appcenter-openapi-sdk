// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ApiTokensPostRequest
    {
        /// <summary>
        /// Initializes a new instance of the ApiTokensPostRequest class.
        /// </summary>
        public ApiTokensPostRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiTokensPostRequest class.
        /// </summary>
        /// <param name="description">The description of the token</param>
        /// <param name="encryptedToken">An encrypted value of the
        /// token.</param>
        /// <param name="scope">The scope for this token. An array of supported
        /// roles.</param>
        /// <param name="tokenHash">The hashed value of api token</param>
        /// <param name="tokenType">The token's type. public:managed by the
        /// user; in_app_update:special token for in-app update scenario;
        /// buid:dedicated for CI usage for now; session:for CLI session
        /// management; tester_app: used for tester mobile app; default is
        /// "public".'. Possible values include: 'public', 'in_app_update',
        /// 'build', 'session', 'tester_app'</param>
        public ApiTokensPostRequest(string description = default(string), string encryptedToken = default(string), IList<string> scope = default(IList<string>), string tokenHash = default(string), string tokenType = default(string))
        {
            Description = description;
            EncryptedToken = encryptedToken;
            Scope = scope;
            TokenHash = tokenHash;
            TokenType = tokenType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the description of the token
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets an encrypted value of the token.
        /// </summary>
        [JsonProperty(PropertyName = "encrypted_token")]
        public string EncryptedToken { get; set; }

        /// <summary>
        /// Gets or sets the scope for this token. An array of supported roles.
        /// </summary>
        [JsonProperty(PropertyName = "scope")]
        public IList<string> Scope { get; set; }

        /// <summary>
        /// Gets or sets the hashed value of api token
        /// </summary>
        [JsonProperty(PropertyName = "token_hash")]
        public string TokenHash { get; set; }

        /// <summary>
        /// Gets or sets the token's type. public:managed by the user;
        /// in_app_update:special token for in-app update scenario;
        /// buid:dedicated for CI usage for now; session:for CLI session
        /// management; tester_app: used for tester mobile app; default is
        /// "public".'. Possible values include: 'public', 'in_app_update',
        /// 'build', 'session', 'tester_app'
        /// </summary>
        [JsonProperty(PropertyName = "token_type")]
        public string TokenType { get; set; }

    }
}
