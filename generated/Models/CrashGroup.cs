// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CrashGroup
    {
        /// <summary>
        /// Initializes a new instance of the CrashGroup class.
        /// </summary>
        public CrashGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CrashGroup class.
        /// </summary>
        /// <param name="status">Possible values include: 'open', 'closed',
        /// 'ignored'</param>
        /// <param name="fatal">Crash or handled exception</param>
        public CrashGroup(string crashGroupId, string displayId, string appVersion, string build, string status, int count, System.DateTime firstOccurrence, System.DateTime lastOccurrence, string crashReason, bool fatal, string annotation, int? impactedUsers = default(int?), string exception = default(string), ReasonStackFrame reasonFrame = default(ReasonStackFrame))
        {
            CrashGroupId = crashGroupId;
            DisplayId = displayId;
            AppVersion = appVersion;
            Build = build;
            Status = status;
            Count = count;
            ImpactedUsers = impactedUsers;
            FirstOccurrence = firstOccurrence;
            LastOccurrence = lastOccurrence;
            Exception = exception;
            CrashReason = crashReason;
            ReasonFrame = reasonFrame;
            Fatal = fatal;
            Annotation = annotation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crash_group_id")]
        public string CrashGroupId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_id")]
        public string DisplayId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_version")]
        public string AppVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "build")]
        public string Build { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'open', 'closed', 'ignored'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int Count { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "impacted_users")]
        public int? ImpactedUsers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_occurrence")]
        public System.DateTime FirstOccurrence { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_occurrence")]
        public System.DateTime LastOccurrence { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exception")]
        public string Exception { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crash_reason")]
        public string CrashReason { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reason_frame")]
        public ReasonStackFrame ReasonFrame { get; set; }

        /// <summary>
        /// Gets or sets crash or handled exception
        /// </summary>
        [JsonProperty(PropertyName = "fatal")]
        public bool Fatal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "annotation")]
        public string Annotation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CrashGroupId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CrashGroupId");
            }
            if (DisplayId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayId");
            }
            if (AppVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppVersion");
            }
            if (Build == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Build");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (CrashReason == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CrashReason");
            }
            if (Annotation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Annotation");
            }
        }
    }
}
