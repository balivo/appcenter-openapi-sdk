// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// crash location information
    /// </summary>
    public partial class V2CrashLocation
    {
        /// <summary>
        /// Initializes a new instance of the V2CrashLocation class.
        /// </summary>
        public V2CrashLocation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V2CrashLocation class.
        /// </summary>
        /// <param name="account">azure account</param>
        /// <param name="container">blob container</param>
        /// <param name="blob">blob name</param>
        public V2CrashLocation(string account, string container, string blob)
        {
            Account = account;
            Container = container;
            Blob = blob;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets azure account
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public string Account { get; set; }

        /// <summary>
        /// Gets or sets blob container
        /// </summary>
        [JsonProperty(PropertyName = "container")]
        public string Container { get; set; }

        /// <summary>
        /// Gets or sets blob name
        /// </summary>
        [JsonProperty(PropertyName = "blob")]
        public string Blob { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Account == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Account");
            }
            if (Container == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Container");
            }
            if (Blob == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Blob");
            }
        }
    }
}
