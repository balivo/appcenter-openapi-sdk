// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A response containing information pertaining to starting a symbol
    /// upload process
    /// </summary>
    public partial class SymbolUploadBeginResponse
    {
        /// <summary>
        /// Initializes a new instance of the SymbolUploadBeginResponse class.
        /// </summary>
        public SymbolUploadBeginResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SymbolUploadBeginResponse class.
        /// </summary>
        /// <param name="symbolUploadId">The id for the current upload</param>
        /// <param name="uploadUrl">The URL where the client needs to upload
        /// the symbol blob to</param>
        /// <param name="expirationDate">Describes how long the upload_url is
        /// valid</param>
        public SymbolUploadBeginResponse(string symbolUploadId, string uploadUrl, System.DateTime expirationDate)
        {
            SymbolUploadId = symbolUploadId;
            UploadUrl = uploadUrl;
            ExpirationDate = expirationDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id for the current upload
        /// </summary>
        [JsonProperty(PropertyName = "symbol_upload_id")]
        public string SymbolUploadId { get; set; }

        /// <summary>
        /// Gets or sets the URL where the client needs to upload the symbol
        /// blob to
        /// </summary>
        [JsonProperty(PropertyName = "upload_url")]
        public string UploadUrl { get; set; }

        /// <summary>
        /// Gets or sets describes how long the upload_url is valid
        /// </summary>
        [JsonProperty(PropertyName = "expiration_date")]
        public System.DateTime ExpirationDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SymbolUploadId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SymbolUploadId");
            }
            if (UploadUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UploadUrl");
            }
        }
    }
}
