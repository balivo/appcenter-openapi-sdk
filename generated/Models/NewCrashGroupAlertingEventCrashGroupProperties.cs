// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Properties of new crash group
    /// </summary>
    public partial class NewCrashGroupAlertingEventCrashGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// NewCrashGroupAlertingEventCrashGroupProperties class.
        /// </summary>
        public NewCrashGroupAlertingEventCrashGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// NewCrashGroupAlertingEventCrashGroupProperties class.
        /// </summary>
        public NewCrashGroupAlertingEventCrashGroupProperties(string id, string name, string reason, string url, string appDisplayName, string appPlatform, string appVersion, IList<string> stackTrace)
        {
            Id = id;
            Name = name;
            Reason = reason;
            Url = url;
            AppDisplayName = appDisplayName;
            AppPlatform = appPlatform;
            AppVersion = appVersion;
            StackTrace = stackTrace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_display_name")]
        public string AppDisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_platform")]
        public string AppPlatform { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "app_version")]
        public string AppVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stack_trace")]
        public IList<string> StackTrace { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Reason == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Reason");
            }
            if (Url == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Url");
            }
            if (AppDisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppDisplayName");
            }
            if (AppPlatform == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppPlatform");
            }
            if (AppVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AppVersion");
            }
            if (StackTrace == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StackTrace");
            }
        }
    }
}
