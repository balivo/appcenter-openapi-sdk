// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CodePushReleaseMetric
    {
        /// <summary>
        /// Initializes a new instance of the CodePushReleaseMetric class.
        /// </summary>
        public CodePushReleaseMetric()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CodePushReleaseMetric class.
        /// </summary>
        public CodePushReleaseMetric(string label, int active, int? downloaded = default(int?), int? failed = default(int?), int? installed = default(int?))
        {
            Label = label;
            Active = active;
            Downloaded = downloaded;
            Failed = failed;
            Installed = installed;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public int Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "downloaded")]
        public int? Downloaded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "failed")]
        public int? Failed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "installed")]
        public int? Installed { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Label == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Label");
            }
        }
    }
}
