// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ExternalStoreRequest
    /// </summary>
    public partial class ExternalStoreRequest
    {
        /// <summary>
        /// Initializes a new instance of the ExternalStoreRequest class.
        /// </summary>
        public ExternalStoreRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExternalStoreRequest class.
        /// </summary>
        /// <param name="type">store Type. Possible values include:
        /// 'googleplay', 'intune', 'windows', 'apple'</param>
        /// <param name="name">name of the store. In case of googleplay,
        /// windows and Apple store this is fixed to Production.</param>
        /// <param name="track">track of the store. Can be production, alpha
        /// &amp; beta for googleplay. Can be production, testflight-internal
        /// &amp; testflight-external for Apple Store. Can be production for
        /// Windows Store. Possible values include: 'production', 'alpha',
        /// 'beta', 'testflight-internal', 'testflight-external'</param>
        /// <param name="serviceConnectionId">Id for the shared service
        /// connection. In case of Apple AppStore, this connection will be used
        /// to create and connect to the Apple AppStore in Mobile
        /// Center.</param>
        public ExternalStoreRequest(string type = default(string), string name = default(string), string track = default(string), IntuneStoreRequest intuneDetails = default(IntuneStoreRequest), WindowsStoreRequest windowsDetails = default(WindowsStoreRequest), string serviceConnectionId = default(string))
        {
            Type = type;
            Name = name;
            Track = track;
            IntuneDetails = intuneDetails;
            WindowsDetails = windowsDetails;
            ServiceConnectionId = serviceConnectionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets store Type. Possible values include: 'googleplay',
        /// 'intune', 'windows', 'apple'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets name of the store. In case of googleplay, windows and
        /// Apple store this is fixed to Production.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets track of the store. Can be production, alpha &amp;amp;
        /// beta for googleplay. Can be production, testflight-internal
        /// &amp;amp; testflight-external for Apple Store. Can be production
        /// for Windows Store. Possible values include: 'production', 'alpha',
        /// 'beta', 'testflight-internal', 'testflight-external'
        /// </summary>
        [JsonProperty(PropertyName = "track")]
        public string Track { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "intune_details")]
        public IntuneStoreRequest IntuneDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "windows_details")]
        public WindowsStoreRequest WindowsDetails { get; set; }

        /// <summary>
        /// Gets or sets id for the shared service connection. In case of Apple
        /// AppStore, this connection will be used to create and connect to the
        /// Apple AppStore in Mobile Center.
        /// </summary>
        [JsonProperty(PropertyName = "service_connection_id")]
        public string ServiceConnectionId { get; set; }

    }
}
