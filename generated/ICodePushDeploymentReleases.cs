// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Balivo.AppCenterClient
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// CodePushDeploymentReleases operations.
    /// </summary>
    public partial interface ICodePushDeploymentReleases
    {
        /// <summary>
        /// Clears a Deployment of releases
        /// </summary>
        /// <param name='deploymentName'>
        /// deployment name
        /// </param>
        /// <param name='ownerName'>
        /// The name of the owner
        /// </param>
        /// <param name='appName'>
        /// The name of the application
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="FailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteWithHttpMessagesAsync(string deploymentName, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the history of releases on a Deployment
        /// </summary>
        /// <param name='deploymentName'>
        /// deployment name
        /// </param>
        /// <param name='ownerName'>
        /// The name of the owner
        /// </param>
        /// <param name='appName'>
        /// The name of the application
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="FailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<CodePushRelease>>> GetWithHttpMessagesAsync(string deploymentName, string ownerName, string appName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Create a new CodePush release for the specified deployment
        /// </summary>
        /// <param name='deploymentName'>
        /// deployment name
        /// </param>
        /// <param name='ownerName'>
        /// The name of the owner
        /// </param>
        /// <param name='appName'>
        /// The name of the application
        /// </param>
        /// <param name='targetBinaryVersion'>
        /// the binary version of the application
        /// </param>
        /// <param name='package'>
        /// The upload zip file
        /// </param>
        /// <param name='deploymentName1'>
        /// This specifies which deployment you want to release the update to.
        /// Default is Staging.
        /// </param>
        /// <param name='description'>
        /// This provides an optional "change log" for the deployment.
        /// </param>
        /// <param name='disabled'>
        /// This specifies whether an update should be downloadable by end
        /// users or not.
        /// </param>
        /// <param name='mandatory'>
        /// This specifies whether the update should be considered mandatory or
        /// not (e.g. it includes a critical security fix).
        /// </param>
        /// <param name='noDuplicateReleaseError'>
        /// This specifies that if the update is identical to the latest
        /// release on the deployment, the CLI should generate a warning
        /// instead of an error.
        /// </param>
        /// <param name='rollout'>
        /// This specifies the percentage of users (as an integer between 1 and
        /// 100) that should be eligible to receive this update.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="FailureException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<CodePushRelease>> CreateWithHttpMessagesAsync(string deploymentName, string ownerName, string appName, string targetBinaryVersion, Stream package = default(Stream), string deploymentName1 = default(string), string description = default(string), bool? disabled = default(bool?), bool? mandatory = default(bool?), bool? noDuplicateReleaseError = default(bool?), int? rollout = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
